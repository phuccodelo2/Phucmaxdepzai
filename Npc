-- Safe Aimbot Simulation (practice mode) — PHUCMAX
-- LƯU Ý: Đây là bản mô phỏng CHO TẬP LUYỆN, KHÔNG tự động điều khiển/đánh hay hook remote.

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local CoreGui = game:GetService("CoreGui")

-- Config
local TARGET_COUNT = 8
local SPAWN_RADIUS = 40
local SCAN_RANGE = 80 -- range để tìm target
local UPDATE_RATE = 0.05

-- Clear old UI if any
pcall(function()
    local g = CoreGui:FindFirstChild("PhucmaxAimSimUI")
    if g then g:Destroy() end
end)

-- Create UI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "PhucmaxAimSimUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = CoreGui

local Main = Instance.new("Frame", ScreenGui)
Main.Name = "Main"
Main.Size = UDim2.new(0, 420, 0, 160)
Main.Position = UDim2.new(0.5, -210, 0.5, -80)
Main.BackgroundColor3 = Color3.fromRGB(25,25,25)
Main.Active = true
Main.Draggable = true
local corner = Instance.new("UICorner", Main)
corner.CornerRadius = UDim.new(0,10)

local Title = Instance.new("TextLabel", Main)
Title.Size = UDim2.new(1, -16, 0, 30)
Title.Position = UDim2.new(0,8,0,8)
Title.BackgroundTransparency = 1
Title.Text = "PHUCMAX — Aim Simulator"
Title.TextColor3 = Color3.fromRGB(255,255,255)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 18
Title.TextXAlignment = Enum.TextXAlignment.Left

-- Toggles and buttons
local btnAimbot = Instance.new("TextButton", Main)
btnAimbot.Size = UDim2.new(0,150,0,34)
btnAimbot.Position = UDim2.new(0,12,0,44)
btnAimbot.Text = "AIM SIM: OFF"
btnAimbot.Font = Enum.Font.GothamBold
btnAimbot.TextSize = 14
btnAimbot.BackgroundColor3 = Color3.fromRGB(170,0,0)
btnAimbot.TextColor3 = Color3.fromRGB(255,255,255)

local btnSpawn = Instance.new("TextButton", Main)
btnSpawn.Size = UDim2.new(0,120,0,34)
btnSpawn.Position = UDim2.new(0,174,0,44)
btnSpawn.Text = "Spawn Targets"
btnSpawn.Font = Enum.Font.Gotham
btnSpawn.TextSize = 14
btnSpawn.BackgroundColor3 = Color3.fromRGB(60,60,60)
btnSpawn.TextColor3 = Color3.fromRGB(255,255,255)

local btnClear = Instance.new("TextButton", Main)
btnClear.Size = UDim2.new(0,120,0,34)
btnClear.Position = UDim2.new(0,306,0,44)
btnClear.Text = "Clear Targets"
btnClear.Font = Enum.Font.Gotham
btnClear.TextSize = 14
btnClear.BackgroundColor3 = Color3.fromRGB(60,60,60)
btnClear.TextColor3 = Color3.fromRGB(255,255,255)

local infoLabel = Instance.new("TextLabel", Main)
infoLabel.Size = UDim2.new(1, -16, 0, 48)
infoLabel.Position = UDim2.new(0,8,0,88)
infoLabel.BackgroundTransparency = 1
infoLabel.Text = "Target: —   Dist: —   Selected: —"
infoLabel.TextColor3 = Color3.fromRGB(200,200,200)
infoLabel.Font = Enum.Font.Gotham
infoLabel.TextSize = 14
infoLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Crosshair indicator (screen)
local cross = Instance.new("Frame", ScreenGui)
cross.Size = UDim2.new(0,2,0,2)
cross.Position = UDim2.new(0.5, -1, 0.5, -1)
cross.BackgroundColor3 = Color3.fromRGB(255,0,0)
cross.BorderSizePixel = 0

-- State
local AIM_ON = false
local practiceTargets = {} -- table of Parts
local selectionBox = nil
local selectedTarget = nil

-- Helper: spawn practice target (a simple part with Name "PracticeTarget")
local function spawnTargetAt(pos, idx)
    local model = Instance.new("Model")
    model.Name = "PracticeTarget_"..tostring(idx)
    local part = Instance.new("Part")
    part.Name = "TargetPart"
    part.Size = Vector3.new(2,2,2)
    part.Position = pos
    part.Anchored = true
    part.CanCollide = false
    part.Parent = model
    local head = Instance.new("Part")
    head.Name = "Head"
    head.Size = Vector3.new(2,2,2)
    head.Position = pos + Vector3.new(0,2,0)
    head.Anchored = true
    head.CanCollide = false
    head.Parent = model
    -- Humanoid optional (for consistency)
    local hum = Instance.new("Humanoid")
    hum.Health = 100
    hum.MaxHealth = 100
    hum.Parent = model
    model.PrimaryPart = part
    model.Parent = workspace
    return model
end

local function spawnPracticeTargets(n)
    -- clear previous
    for _,m in pairs(practiceTargets) do
        pcall(function() m:Destroy() end)
    end
    practiceTargets = {}
    local char = LocalPlayer.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return end
    local center = char.HumanoidRootPart.Position
    for i=1,n do
        local angle = math.rad((i-1) * (360/n))
        local r = math.random(8, SPAWN_RADIUS)
        local dx = math.cos(angle) * r
        local dz = math.sin(angle) * r
        local pos = center + Vector3.new(dx, 0, dz)
        pos = pos + Vector3.new(0, 2 + math.random()*4, 0)
        local m = spawnTargetAt(pos, i)
        table.insert(practiceTargets, m)
    end
end

local function clearPracticeTargets()
    for _,m in pairs(practiceTargets) do
        pcall(function() m:Destroy() end)
    end
    practiceTargets = {}
    if selectionBox then selectionBox:Destroy(); selectionBox = nil end
    selectedTarget = nil
    infoLabel.Text = "Target: —   Dist: —   Selected: —"
end

-- SelectionBox for highlighting selected target
local function ensureSelectionBox()
    if not selectionBox then
        selectionBox = Instance.new("SelectionBox")
        selectionBox.SurfaceColor3 = Color3.fromRGB(0,255,170)
        selectionBox.LineThickness = 0.04
        selectionBox.Parent = workspace
    end
end

-- Find nearest target within SCAN_RANGE
local function findNearestTarget()
    local char = LocalPlayer.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return nil end
    local hrp = char.HumanoidRootPart
    local best, bestDist = nil, math.huge
    for _,m in pairs(practiceTargets) do
        pcall(function()
            local part = m:FindFirstChild("TargetPart") or m.PrimaryPart
            if part then
                local d = (part.Position - hrp.Position).Magnitude
                if d < bestDist and d <= SCAN_RANGE then
                    best = m
                    bestDist = d
                end
            end
        end)
    end
    return best, bestDist
end

-- Update loop
spawn(function()
    while true do
        if AIM_ON then
            ensureSelectionBox()
            local tgt, dist = findNearestTarget()
            if tgt then
                selectedTarget = tgt
                local adornPart = tgt:FindFirstChild("TargetPart") or tgt.PrimaryPart
                selectionBox.Adornee = adornPart
                infoLabel.Text = string.format("Target: %s   Dist: %.1f   Selected: YES", tgt.Name, dist)
                -- update crosshair position indicator: project target to screen
                local cam = workspace.CurrentCamera
                local p = cam:WorldToViewportPoint(adornPart.Position)
                cross.Position = UDim2.new(0, p.X - 1, 0, p.Y - 1)
            else
                selectedTarget = nil
                if selectionBox then selectionBox.Adornee = nil end
                infoLabel.Text = "Target: —   Dist: —   Selected: NO"
            end
        else
            if selectionBox then selectionBox.Adornee = nil end
            infoLabel.Text = "Target: —   Dist: —   Selected: —"
        end
        wait(UPDATE_RATE)
    end
end)

-- Button actions
btnAimbot.MouseButton1Click:Connect(function()
    AIM_ON = not AIM_ON
    if AIM_ON then
        btnAimbot.Text = "AIM SIM: ON"
        btnAimbot.BackgroundColor3 = Color3.fromRGB(0,160,60)
    else
        btnAimbot.Text = "AIM SIM: OFF"
        btnAimbot.BackgroundColor3 = Color3.fromRGB(170,0,0)
    end
end)

btnSpawn.MouseButton1Click:Connect(function()
    spawnPracticeTargets(TARGET_COUNT)
end)

btnClear.MouseButton1Click:Connect(function()
    clearPracticeTargets()
end)

-- Copy selected target info
Main.InputBegan:Connect(function(input, gpe)
    if input.KeyCode == Enum.KeyCode.C then
        if selectedTarget then
            local part = selectedTarget:FindFirstChild("TargetPart") or selectedTarget.PrimaryPart
            if part and setclipboard then
                local s = string.format("Target: %s\nPosition = Vector3.new(%.3f, %.3f, %.3f)\n", selectedTarget.Name, part.Position.X, part.Position.Y, part.Position.Z)
                pcall(function() setclipboard(s) end)
            end
        end
    end
end)

-- Initial spawn (optional)
spawnPracticeTargets(TARGET_COUNT)

-- End of script
