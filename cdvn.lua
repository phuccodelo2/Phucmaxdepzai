-- KI·ªÇM TRA ƒê√É LOAD UI CH∆ØA
if getgenv then
	if getgenv()._phucmax_ui_loaded then return end
	getgenv()._phucmax_ui_loaded = true
end

-- D·ªäCH V·ª§
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

-- GUI CH√çNH
local gui = Instance.new("ScreenGui", CoreGui)
gui.Name = "PhucmaxRainbowUI"
gui.ResetOnSpawn = false

-- VI·ªÄN RAINBOW
local function createRainbowFrame(parent)
	local stroke = Instance.new("UIStroke", parent)
	stroke.Thickness = 2
	stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	stroke.Color = Color3.new(1, 0, 0)
	task.spawn(function()
		local hue = 0
		while parent.Parent do
			hue = (hue + 1) % 255
			stroke.Color = Color3.fromHSV(hue / 255, 1, 1)
			task.wait(0.03)
		end
	end)
end

-- FRAME CH√çNH
local main = Instance.new("Frame", gui)
main.Size = UDim2.new(0, 280, 0, 340)
main.AnchorPoint = Vector2.new(0.5, 0.5)
main.Position = UDim2.new(0.5, 0, 0.5, 0)
main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
main.ClipsDescendants = true
main.Visible = false
main.Active = true
main.Draggable = true
Instance.new("UICorner", main).CornerRadius = UDim.new(0, 12)
createRainbowFrame(main)

-- HI·ªÜN MENU (c√≥ animation)
local function toggleMenu()
	main.Visible = true
	main.Position = UDim2.new(0.5, 0, 0.5, 0)
	main.Size = UDim2.new(0, 0, 0, 0)
	local tween = TweenService:Create(main, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
		Size = UDim2.new(0, 280, 0, 340)
	})
	tween:Play()
end

-- THANH TAB
local tabBar = Instance.new("ScrollingFrame", main)
tabBar.Size = UDim2.new(1, -20, 0, 36)
tabBar.Position = UDim2.new(0, 10, 0, 10)
tabBar.ScrollBarThickness = 4
tabBar.ScrollingDirection = Enum.ScrollingDirection.X
tabBar.CanvasSize = UDim2.new(0, 0, 0, 0)
tabBar.BackgroundTransparency = 1

local tabLayout = Instance.new("UIListLayout", tabBar)
tabLayout.FillDirection = Enum.FillDirection.Horizontal
tabLayout.Padding = UDim.new(0, 5)
tabLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- T·ª∞ ƒê·ªòNG C·∫¨P NH·∫¨T TAB SCROLL
local function updateTabCanvas()
	task.wait()
	local totalWidth = 0
	for _, child in pairs(tabBar:GetChildren()) do
		if child:IsA("TextButton") then
			totalWidth += child.Size.X.Offset + tabLayout.Padding.Offset
		end
	end
	tabBar.CanvasSize = UDim2.new(0, totalWidth, 0, 0)
end

-- KHUNG N·ªòI DUNG TAB
local tabContainer = Instance.new("Frame", main)
tabContainer.Size = UDim2.new(1, -20, 1, -60)
tabContainer.Position = UDim2.new(0, 10, 0, 50)
tabContainer.BackgroundTransparency = 1

-- T·∫†O TAB
local tabs, currentTab = {}, nil
local function switchTab(name)
	for i, v in pairs(tabs) do
		v.Visible = (i == name)
	end
end

local function createTab(name)
	local btn = Instance.new("TextButton", tabBar)
	btn.Size = UDim2.new(0, 80, 1, 0)
	btn.Text = name
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 14
	btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)

	local page = Instance.new("ScrollingFrame", tabContainer)
	page.Size = UDim2.new(1, 0, 1, 0)
	page.CanvasSize = UDim2.new(0, 0, 0, 0)
	page.ScrollBarThickness = 4
	page.AutomaticCanvasSize = Enum.AutomaticSize.Y
	page.BackgroundTransparency = 1
	local layout = Instance.new("UIListLayout", page)
	layout.Padding = UDim.new(0, 6)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.HorizontalAlignment = Enum.HorizontalAlignment.Center

	tabs[name] = page
	page.Visible = false

	btn.MouseButton1Click:Connect(function()
		switchTab(name)
	end)

	if not currentTab then
		currentTab = name
		page.Visible = true
	end

	updateTabCanvas()
	return page
end

-- N√öT TOGGLE
local function createToggle(text, parent, callback)
	local holder = Instance.new("Frame", parent)
	holder.Size = UDim2.new(0.9, 0, 0, 32)
	holder.BackgroundTransparency = 1
	local box = Instance.new("TextButton", holder)
	box.Size = UDim2.new(0, 28, 0, 28)
	box.Position = UDim2.new(0, 0, 0.5, -14)
	box.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	box.Text = ""
	Instance.new("UICorner", box).CornerRadius = UDim.new(0, 6)
	createRainbowFrame(box)
	local lbl = Instance.new("TextLabel", holder)
	lbl.Position = UDim2.new(0, 35, 0, 0)
	lbl.Size = UDim2.new(1, -35, 1, 0)
	lbl.BackgroundTransparency = 1
	lbl.Text = text
	lbl.Font = Enum.Font.GothamBold
	lbl.TextSize = 14
	lbl.TextColor3 = Color3.new(1, 1, 1)
	lbl.TextXAlignment = Enum.TextXAlignment.Left

	local state = false
	box.MouseButton1Click:Connect(function()
		state = not state
		box.BackgroundColor3 = state and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(40, 40, 40)
		callback(state)
	end)
end

-- N√öT B√åNH TH∆Ø·ªúNG
local function createButton(text, parent, callback)
	local btn = Instance.new("TextButton", parent)
	btn.Size = UDim2.new(0.9, 0, 0, 32)
	btn.Text = text
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 14
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
	btn.MouseButton1Click:Connect(callback)
end

-- N√öT B·∫¨T/T·∫ÆT MENU
local logo = Instance.new("ImageButton", gui)
logo.Size = UDim2.new(0, 48, 0, 48)
logo.Position = UDim2.new(0, 10, 0.5, -24)
logo.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
logo.Image = "rbxassetid://113632547593752"
logo.Draggable = true
Instance.new("UICorner", logo).CornerRadius = UDim.new(1, 0)
createRainbowFrame(logo)

logo.MouseButton1Click:Connect(function()
	if main.Visible then
		local tween = TweenService:Create(main, TweenInfo.new(0.2), {
			Size = UDim2.new(0, 0, 0, 0)
		})
		tween:Play()
		tween.Completed:Wait()
		main.Visible = false
	else
		toggleMenu()
	end
end)

-- T·∫†O C√ÅC TAB
local tabINFO = createTab("INFO")
local tabPVP = createTab("PVP")
--------------------------------------------------------------------
createButton("üìã COPY LINK DISCORD", tabs["INFO"], function()
    local setClipboard = setclipboard or toclipboard or function() end
    setClipboard("https://discord.gg/RzN6vzeP") 
    pcall(function()
        game.StarterGui:SetCore("SendNotification", {
            Title = "PHUCMAX",
            Text = "‚úÖ copy link Discord!",
            Duration = 3
        })
    end)
end)

createButton("üìã COPY LINK facebook", tabs["INFO"], function()
    local setClipboard = setclipboard or toclipboard or function() end
    setClipboard("https://www.facebook.com/rHnewp7") 
    pcall(function()
        game.StarterGui:SetCore("SendNotification", {
            Title = "PHUCMAX",
            Text = "‚úÖ copy link Facebook!",
            Duration = 3
        })
    end)
end)

createButton("üìã COPY LINK tiktok", tabs["INFO"], function()
    local setClipboard = setclipboard or toclipboard or function() end
    setClipboard("phucmaxxxxxxxxx") 
    pcall(function()
        game.StarterGui:SetCore("SendNotification", {
            Title = "PHUCMAX",
            Text = "‚úÖ copy link TikTok!",
            Duration = 3
        })
    end)
end)

createButton("FIXLAG", tabPVP, function()
    -- Xo√° to√†n b·ªô hi·ªáu ·ª©ng, particles, trails, smoke, fire, sparkles...
    for _, v in pairs(game:GetDescendants()) do
        if v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Smoke") or v:IsA("Fire") or v:IsA("Sparkles") or v:IsA("Explosion") then
            v:Destroy()
        end
    end

    -- Xo√° to√†n b·ªô Decals & Textures
    for _, v in pairs(game:GetDescendants()) do
        if v:IsA("Decal") or v:IsA("Texture") then
            v:Destroy()
        end
    end

    -- Xo√° t·∫•t c·∫£ Lighting Effects (b√≥ng ƒë·ªï, blur, color correction...)
    local lighting = game:GetService("Lighting")
    for _, v in pairs(lighting:GetChildren()) do
        if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") then
            v:Destroy()
        end
    end

    -- Gi·∫£m t·ªëi ƒëa ch·∫•t l∆∞·ª£ng v·∫≠t th·ªÉ
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("BasePart") then
            v.Material = Enum.Material.SmoothPlastic
            v.Reflectance = 0
            v.CastShadow = false
        end
    end

    -- Xo√° t·∫•t c·∫£ c√°c t∆∞·ªùng (Wall = Part l·ªõn ƒë·ª©ng th·∫≥ng)
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("Part") and v.Size.Y > v.Size.X and v.Size.Y > v.Size.Z and v.Anchored and v.Position.Y > 10 then
            v:Destroy()
        end
    end

    -- T·∫Øt c√°c chi ti·∫øt ph·ª• c·ªßa b·∫£n ƒë·ªì (Meshes & c√°c part trang tr√≠ nh·ªè)
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("MeshPart") or v:IsA("UnionOperation") then
            v:Destroy()
        end
    end

    -- T·∫Øt Terrain n·∫øu c√≥
    if workspace:FindFirstChildOfClass("Terrain") then
        workspace.Terrain:Clear()
    end

    -- T·∫Øt Water n·∫øu c√≥
    workspace.FallenPartsDestroyHeight = -50000
    if lighting:FindFirstChild("Atmosphere") then
        lighting.Atmosphere:Destroy()
    end

    -- B·∫≠t FPS cao nh·∫•t (n·∫øu d√πng Trigon ho·∫∑c Synapse c√≥ th·ªÉ d√πng setfpscap)
    pcall(function()
        setfpscap(999999)
    end)

    -- T·∫Øt Shadows v√† Global Shadows
    lighting.GlobalShadows = false
    lighting.FogEnd = 1000000000

    -- Xo√° Sky n·∫øu c√≥
    for _, v in pairs(lighting:GetChildren()) do
        if v:IsA("Sky") then
            v:Destroy()
        end
    end

    print("‚úÖ ƒê√£ fix lag t·ªëi ƒëa.")
end)

local defaultSpeed = 16
local speedEnabled = false

createToggle("Ch·∫°y nhanh", tabPVP, function(state)
    speedEnabled = state
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    if state then
        humanoid.WalkSpeed = 32 -- b·∫≠t ch·∫°y nhanh
    else
        humanoid.WalkSpeed = defaultSpeed -- tr·∫£ v·ªÅ b√¨nh th∆∞·ªùng
    end

    -- Theo d√µi n·∫øu ng∆∞·ªùi ch∆°i respawn
    if state then
        local conn
        conn = player.CharacterAdded:Connect(function(char)
            humanoid = char:WaitForChild("Humanoid")
            humanoid.WalkSpeed = 32
        end)
    end
end)

local autoClickEnabled = false
local autoClickInterval = 0.1
local autoClickTask

local UIS = game:GetService("UserInputService")
local VIM = game:GetService("VirtualInputManager")

createToggle("Auto Click", tabPVP, function(state)
    autoClickEnabled = state

    if state then
        autoClickTask = task.spawn(function()
            while autoClickEnabled do
                pcall(function()
                    -- Nh·∫•n chu·ªôt tr√°i ·∫£o (click hi·ªán t·∫°i v·ªã tr√≠ con tr·ªè)
                    VIM:SendMouseButtonEvent(
                        0, 0, 0, true, game, 1
                    )
                    task.wait(0.01)
                    VIM:SendMouseButtonEvent(
                        0, 0, 0, false, game, 1
                    )
                end)
                task.wait(autoClickInterval)
            end
        end)
    else
        if autoClickTask then
            task.cancel(autoClickTask)
            autoClickTask = nil
        end
    end
end)

-- Bi·∫øn l∆∞u connection xoay
local rotateConnection

createToggle("xoay", tabPVP, function(state)
    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")

    local LocalPlayer = Players.LocalPlayer
    local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local Humanoid = Character:WaitForChild("Humanoid")
    local RootPart = Character:WaitForChild("HumanoidRootPart")

    -- T·∫Øt t·ª± ƒë·ªông xoay theo h∆∞·ªõng ch·∫°y
    Humanoid.AutoRotate = false

    if state then
        -- B·∫≠t xoay
        if not rotateConnection then
            rotateConnection = RunService.RenderStepped:Connect(function()
                RootPart.CFrame = RootPart.CFrame * CFrame.Angles(0, math.rad(40), 0) 
                -- 20¬∞ m·ªói frame, v·ª´a nh√¨n
            end)
        end
    else
        -- T·∫Øt xoay
        if rotateConnection then
            rotateConnection:Disconnect()
            rotateConnection = nil
        end
    end
end)

-- T·∫°o UI ch·ª©c nƒÉng bƒÉng g·∫°c (sub UI)
-- Sub UI bƒÉng g·∫°c n√¢ng cao
local bandageFrame = Instance.new("Frame", gui)
bandageFrame.Size = UDim2.new(0, 250, 0, 80)
bandageFrame.AnchorPoint = Vector2.new(1, 0.5)
bandageFrame.Position = UDim2.new(1, -20, 0.5, -40)
bandageFrame.BackgroundColor3 = Color3.fromRGB(30,30,30)
bandageFrame.Visible = false
bandageFrame.ClipsDescendants = true
Instance.new("UICorner", bandageFrame).CornerRadius = UDim.new(0,12)

-- Label th√¥ng b√°o
local infoLabel = Instance.new("TextLabel", bandageFrame)
infoLabel.Size = UDim2.new(1, -10, 0, 24)
infoLabel.Position = UDim2.new(0,5,0,5)
infoLabel.BackgroundTransparency = 1
infoLabel.Text = "Ch·ªçn √¥ bƒÉng g·∫°c"
infoLabel.Font = Enum.Font.GothamBold
infoLabel.TextSize = 16
infoLabel.TextColor3 = Color3.new(1,1,1)
infoLabel.TextScaled = true

-- Bi·∫øn l∆∞u √¥ ƒë√£ ch·ªçn (1-5)
local selectedSlot = nil
local canUse = true

-- T·∫°o √¥ l·ª±a ch·ªçn
local slotButtons = {}
for i = 1,5 do
    local btn = Instance.new("TextButton", bandageFrame)
    btn.Size = UDim2.new(0,40,0,40)
    btn.Position = UDim2.new(0, 10 + (i-1)*45, 0, 35)
    btn.Text = tostring(i)
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 18
    btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)

    btn.MouseButton1Click:Connect(function()
        selectedSlot = i
        for _, b in pairs(slotButtons) do b.BackgroundColor3 = Color3.fromRGB(50,50,50) end
        btn.BackgroundColor3 = Color3.fromRGB(0,200,0)
        infoLabel.Text = "√î ƒë√£ ch·ªçn: "..i
    end)

    table.insert(slotButtons, btn)
end

-- N√∫t l·∫•y bƒÉng g·∫°c
local bandageButton = Instance.new("TextButton", bandageFrame)
bandageButton.Size = UDim2.new(0, 230,0,30)
bandageButton.Position = UDim2.new(0,10,0,35+45)
bandageButton.BackgroundColor3 = Color3.fromRGB(70,70,70)
bandageButton.Text = "L·∫•y bƒÉng g·∫°c"
Instance.new("UICorner", bandageButton).CornerRadius = UDim.new(0,6)

local cooldownLabel = Instance.new("TextLabel", bandageButton)
cooldownLabel.Size = UDim2.new(1,0,1,0)
cooldownLabel.Position = UDim2.new(0,0,0,0)
cooldownLabel.BackgroundTransparency = 1
cooldownLabel.TextColor3 = Color3.new(1,1,1)
cooldownLabel.Text = "L·∫•y bƒÉng g·∫°c"
cooldownLabel.Font = Enum.Font.GothamBold
cooldownLabel.TextScaled = true

local firstClickDone = false

bandageButton.MouseButton1Click:Connect(function()
    if not canUse then return end
    if not selectedSlot then
        infoLabel.Text = "Ch∆∞a ch·ªçn √¥!"
        return
    end

    if not firstClickDone then
        infoLabel.Text = "Nh·∫•n v√†o m√†n h√¨nh 1 l·∫ßn ƒë·ªÉ k√≠ch ho·∫°t!"
        -- L·∫Øng nghe InputBegan l·∫ßn ƒë·∫ßu
        local conn
        conn = game:GetService("UserInputService").InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                firstClickDone = true
                conn:Disconnect()
                infoLabel.Text = "ƒê√£ k√≠ch ho·∫°t! B·∫Øt ƒë·∫ßu cooldown."
                -- B·∫Øt ƒë·∫ßu cooldown 10s
                canUse = false
                task.spawn(function()
                    local cd = 10
                    while cd > 0 do
                        cooldownLabel.Text = "Cooldown: "..cd.."s"
                        task.wait(1)
                        cd -= 1
                    end
                    cooldownLabel.Text = "L·∫•y bƒÉng g·∫°c"
                    canUse = true
                end)
            end
        end)
        return
    end

    -- N·∫øu ƒë√£ click th·∫≠t 1 l·∫ßn, l·∫ßn sau t·ª± ƒë·ªông l·∫•y bƒÉng g·∫°c
    local RepStorage = game:GetService("ReplicatedStorage")
    local KnitPackages = RepStorage:WaitForChild("KnitPackages")
    local Index = KnitPackages._Index
    local Knit = Index:WaitForChild("sleitnick_knit@1.7.0").knit
    local Services = Knit:WaitForChild("Services")
    local InventoryService = Services:WaitForChild("InventoryService").RE

    pcall(function()
        InventoryService.updateInventory:FireServer("eue","bƒÉng g·∫°c")
        InventoryService.updateInventory:FireServer("refresh")
    end)

    -- G·ª≠i key slot
    local UIS = game:GetService("UserInputService")
    local keyMap = {"One","Two","Three","Four","Five"}
    local key = keyMap[selectedSlot]
    task.spawn(function()
        UIS.InputBegan:Fire({KeyCode = Enum.KeyCode[key]})
    end)

    -- B·∫Øt ƒë·∫ßu cooldown 10s
    canUse = false
    task.spawn(function()
        local cd = 10
        while cd > 0 do
            cooldownLabel.Text = "Cooldown: "..cd.."s"
            task.wait(1)
            cd -= 1
        end
        cooldownLabel.Text = "L·∫•y bƒÉng g·∫°c"
        canUse = true
    end)
end)

local canBuy = true -- Bi·∫øn ki·ªÉm so√°t cooldown 6s

createButton("Mua 5 bƒÉng g·∫°c", tabPVP, function()
    if not canBuy then
        return -- N·∫øu ƒëang cooldown th√¨ kh√¥ng l√†m g√¨
    end

    canBuy = false -- kh√≥a n√∫t

    -- Chu·∫©n b·ªã arguments
    local args = {
        "bƒÉng g·∫°c",
        5
    }

    -- L·∫•y service mua item
    local ShopService = game:GetService("ReplicatedStorage")
        :WaitForChild("KnitPackages")
        :WaitForChild("_Index")
        :WaitForChild("sleitnick_knit@1.7.0")
        :WaitForChild("knit")
        :WaitForChild("Services")
        :WaitForChild("ShopService")
        :WaitForChild("RE")

    -- G·ª≠i request mua item
    ShopService.buyItem:FireServer(unpack(args))

    -- B·∫Øt ƒë·∫ßu ƒë·∫øm ng∆∞·ª£c 6 gi√¢y m·ªõi ƒë∆∞·ª£c b·∫•m l·∫°i
    task.delay(3, function()
        canBuy = true
    end)
end)