-- GrappleHook_RSpy_UI.lua
-- UI nhỏ gọn cho Grapple Hook với nút copy code

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- CONFIG
local GRAPPLE_FORCE = 2000
local STOP_DISTANCE = 6

-- Grapple core code (dùng cho copy)
local grappleCode = [[
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local mouse = LocalPlayer:GetMouse()

local function grappleTo(position)
    local char = LocalPlayer.Character
    if not char then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local conn
    local bodyVel = Instance.new("BodyVelocity")
    bodyVel.MaxForce = Vector3.new(1e5,1e5,1e5)
    bodyVel.Velocity = Vector3.new(0,0,0)
    bodyVel.P = 5000
    bodyVel.Parent = hrp

    conn = RunService.Heartbeat:Connect(function()
        if not hrp or not hrp.Parent then
            bodyVel:Destroy()
            conn:Disconnect()
            return
        end
        local dir = (position - hrp.Position)
        local dist = dir.Magnitude
        if dist <= ]] .. STOP_DISTANCE .. [[ then
            bodyVel:Destroy()
            conn:Disconnect()
            return
        end
        bodyVel.Velocity = dir.Unit * ]] .. GRAPPLE_FORCE .. [[
    end)
end

-- Usage: grappleTo(mouse.Hit.Position)
]]

-- Remove existing UI
if PlayerGui:FindFirstChild("GrappleHook_RSpy_UI") then
    PlayerGui:FindFirstChild("GrappleHook_RSpy_UI"):Destroy()
end

-- Helper to create instances
local function new(class, props)
    local obj = Instance.new(class)
    if props then
        for k,v in pairs(props) do obj[k] = v end
    end
    return obj
end

-- ScreenGui
local screenGui = new("ScreenGui", {Name="GrappleHook_RSpy_UI", Parent=PlayerGui})

-- Main frame
local frame = new("Frame", {
    Parent = screenGui,
    Size = UDim2.new(0,240,0,120),
    Position = UDim2.new(0.02,0,0.3,0),
    BackgroundColor3 = Color3.fromRGB(30,30,30),
    BorderSizePixel = 0,
})
frame.ClipsDescendants = true

-- Title
new("TextLabel", {
    Parent = frame,
    Size = UDim2.new(1,0,0,28),
    BackgroundTransparency = 1,
    Text = "Grapple Hook (RSpy)",
    TextColor3 = Color3.new(1,1,1),
    Font = Enum.Font.SourceSansSemibold,
    TextSize = 16,
    TextXAlignment = Enum.TextXAlignment.Left,
})

-- Close button
local closeBtn = new("TextButton", {
    Parent = frame,
    Size = UDim2.new(0,24,0,24),
    Position = UDim2.new(1,-28,0,2),
    Text = "X",
    BackgroundColor3 = Color3.fromRGB(65,65,65),
    TextColor3 = Color3.new(1,1,1),
    Font = Enum.Font.SourceSansBold,
    TextSize = 14,
})
closeBtn.MouseButton1Click:Connect(function()
    frame.Visible = false
end)

-- Status label
local status = new("TextLabel", {
    Parent = frame,
    Size = UDim2.new(1,-12,0,22),
    Position = UDim2.new(0,6,0,32),
    BackgroundTransparency = 1,
    Text = "Inactive",
    TextColor3 = Color3.fromRGB(200,200,200),
    Font = Enum.Font.SourceSans,
    TextSize = 14,
    TextXAlignment = Enum.TextXAlignment.Left,
})

-- Toggle button
local toggle = new("TextButton", {
    Parent = frame,
    Size = UDim2.new(0,100,0,28),
    Position = UDim2.new(0,6,0,60),
    Text = "Enable",
    BackgroundColor3 = Color3.fromRGB(85,170,85),
    TextColor3 = Color3.new(1,1,1),
    Font = Enum.Font.SourceSansBold,
    TextSize = 14,
})

-- Copy button
local copyBtn = new("TextButton", {
    Parent = frame,
    Size = UDim2.new(0,100,0,28),
    Position = UDim2.new(0,128,0,60),
    Text = "Copy Code",
    BackgroundColor3 = Color3.fromRGB(70,130,180),
    TextColor3 = Color3.new(1,1,1),
    Font = Enum.Font.SourceSansBold,
    TextSize = 14,
})

-- Draggable frame
local dragging, dragOffset
frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        local mousePos = UserInputService:GetMouseLocation()
        dragOffset = Vector2.new(mousePos.X, mousePos.Y) - Vector2.new(frame.AbsolutePosition.X, frame.AbsolutePosition.Y)
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then dragging = false end
        end)
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local mousePos = UserInputService:GetMouseLocation()
        frame.Position = UDim2.new(0, mousePos.X - dragOffset.X, 0, mousePos.Y - dragOffset.Y)
    end
end)

-- Grapple logic
local enabled = false
local mouse = LocalPlayer:GetMouse()
local heartbeatConn

local function startGrappleMode()
    if enabled then return end
    enabled = true
    status.Text = "Active - Click to grapple"
    toggle.Text = "Disable"
    toggle.BackgroundColor3 = Color3.fromRGB(200,80,80)

    heartbeatConn = mouse.Button1Down:Connect(function()
        local hit = mouse.Hit
        if not hit then return end
        local target = hit.p
        local char = LocalPlayer.Character
        if not char then return end
        local hrp = char:FindFirstChild("HumanoidRootPart")
        if not hrp then return end

        local bv = Instance.new("BodyVelocity")
        bv.MaxForce = Vector3.new(1e5,1e5,1e5)
        bv.P = 5000
        bv.Velocity = Vector3.new(0,0,0)
        bv.Parent = hrp

        local conn
        conn = RunService.Heartbeat:Connect(function()
            if not hrp or not hrp.Parent then
                bv:Destroy()
                conn:Disconnect()
                return
            end
            local dir = (target - hrp.Position)
            local dist = dir.Magnitude
            if dist <= STOP_DISTANCE then
                bv:Destroy()
                conn:Disconnect()
                return
            end
            bv.Velocity = dir.Unit * GRAPPLE_FORCE
        end)
    end)
end

local function stopGrappleMode()
    if not enabled then return end
    enabled = false
    status.Text = "Inactive"
    toggle.Text = "Enable"
    toggle.BackgroundColor3 = Color3.fromRGB(85,170,85)
    if heartbeatConn then heartbeatConn:Disconnect() heartbeatConn = nil end
end

toggle.MouseButton1Click:Connect(function()
    if enabled then stopGrappleMode() else startGrappleMode() end
end)

copyBtn.MouseButton1Click:Connect(function()
    local ok = pcall(function()
        if setclipboard then
            setclipboard(grappleCode)
        else
            error("setclipboard not available")
        end
    end)
    if ok then
        status.Text = "Code copied!"
        delay(2,function() if status then status.Text = enabled and "Active - Click to grapple" or "Inactive" end end)
    else
        status.Text = "Cannot copy. Use manual selection."
        delay(2,function() if status then status.Text = enabled and "Active - Click to grapple" or "Inactive" end end)
    end
end)

stopGrappleMode()
